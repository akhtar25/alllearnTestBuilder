"""empty message

Revision ID: ddee78580e4c
Revises: 
Create Date: 2020-04-17 18:08:57.141038

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ddee78580e4c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('student_remarks',
    sa.Column('remark_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('remark_desc', sa.String(length=200), nullable=False),
    sa.Column('remark_type', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['remark_type'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_profile.student_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('remark_id')
    )
    op.create_table('survey_detail',
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('survey_name', sa.String(length=200), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('question_count', sa.Integer(), nullable=False),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('survey_id')
    )
    op.create_table('teacher_payroll_detail',
    sa.Column('tpd_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('total_salary', sa.Float(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('days_in_month', sa.Integer(), nullable=False),
    sa.Column('days_present', sa.Integer(), nullable=False),
    sa.Column('calc_salary', sa.Float(), nullable=False),
    sa.Column('paid_status', sa.String(length=1), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('tpd_id')
    )
    op.create_table('teacher_salary',
    sa.Column('teacher_salary_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('total_salary', sa.Float(), nullable=False),
    sa.Column('is_current', sa.String(length=1), nullable=False),
    sa.Column('salary_set_on', sa.DateTime(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('teacher_salary_id')
    )
    op.add_column('board_class_subject', sa.Column('board_det_id', sa.Integer(), nullable=True))
    op.add_column('board_class_subject', sa.Column('is_archived', sa.String(length=1), nullable=True))
    op.add_column('board_class_subject', sa.Column('school_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'board_class_subject', 'board_detail', ['board_det_id'], ['board_det_id'])
    op.create_foreign_key(None, 'board_class_subject', 'school_profile', ['school_id'], ['school_id'])
    op.add_column('board_class_subject_books', sa.Column('bcsb_id', sa.Integer(), nullable=False))
    op.add_column('board_class_subject_books', sa.Column('book_id', sa.Integer(), nullable=True))
    op.add_column('board_class_subject_books', sa.Column('class_val', sa.Integer(), nullable=True))
    op.add_column('board_class_subject_books', sa.Column('is_archived', sa.String(length=1), nullable=True))
    op.add_column('board_class_subject_books', sa.Column('last_modified_date', sa.DateTime(), nullable=True))
    op.add_column('board_class_subject_books', sa.Column('school_id', sa.Integer(), nullable=False))
    op.add_column('board_class_subject_books', sa.Column('subject_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'board_class_subject_books', 'message_detail', ['subject_id'], ['msg_id'])
    op.create_foreign_key(None, 'board_class_subject_books', 'school_profile', ['school_id'], ['school_id'])
    op.create_foreign_key(None, 'board_class_subject_books', 'book_details', ['book_id'], ['book_id'])
    op.drop_column('board_class_subject_books', 'name')
    op.drop_column('board_class_subject_books', 'col_id')
    op.add_column('teacher_profile', sa.Column('curr_salary', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('teacher_profile', 'curr_salary')
    op.add_column('board_class_subject_books', sa.Column('col_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('board_class_subject_books', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'board_class_subject_books', type_='foreignkey')
    op.drop_constraint(None, 'board_class_subject_books', type_='foreignkey')
    op.drop_constraint(None, 'board_class_subject_books', type_='foreignkey')
    op.drop_column('board_class_subject_books', 'subject_id')
    op.drop_column('board_class_subject_books', 'school_id')
    op.drop_column('board_class_subject_books', 'last_modified_date')
    op.drop_column('board_class_subject_books', 'is_archived')
    op.drop_column('board_class_subject_books', 'class_val')
    op.drop_column('board_class_subject_books', 'book_id')
    op.drop_column('board_class_subject_books', 'bcsb_id')
    op.drop_constraint(None, 'board_class_subject', type_='foreignkey')
    op.drop_constraint(None, 'board_class_subject', type_='foreignkey')
    op.drop_column('board_class_subject', 'school_id')
    op.drop_column('board_class_subject', 'is_archived')
    op.drop_column('board_class_subject', 'board_det_id')
    op.drop_table('teacher_salary')
    op.drop_table('teacher_payroll_detail')
    op.drop_table('survey_detail')
    op.drop_table('student_remarks')
    # ### end Alembic commands ###
