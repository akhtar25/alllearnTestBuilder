"""empty message

Revision ID: a77935235bf3
Revises: db3fcb8cabd8
Create Date: 2019-05-27 17:06:44.192084

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a77935235bf3'
down_revision = 'db3fcb8cabd8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alllearn_school_perf',
    sa.Column('all_perf_id', sa.Integer(), nullable=False),
    sa.Column('avg_perf_alllearn', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('all_perf_id')
    )
    op.create_table('attendance',
    sa.Column('attendance_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('attendance_date', sa.DateTime(), nullable=True),
    sa.Column('is_present', sa.Integer(), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('attendance_id')
    )
    op.create_table('book_details',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.String(length=120), nullable=True),
    sa.Column('book_name', sa.String(length=120), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('book_id')
    )
    op.create_table('calendar',
    sa.Column('calendar_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('date_aging', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('week_aging', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('month_name', sa.Integer(), nullable=False),
    sa.Column('month_aging', sa.Integer(), nullable=False),
    sa.Column('semi_annual', sa.Integer(), nullable=False),
    sa.Column('semi_annual_aging', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('year_aging', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('calendar_id')
    )
    op.create_table('class_section',
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.String(length=1), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('student_count', sa.Integer(), nullable=False),
    sa.Column('class_teacher', sa.Integer(), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['class_teacher'], ['teacher_profile.teacher_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.PrimaryKeyConstraint('class_sec_id')
    )
    op.create_table('content',
    sa.Column('content_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.String(length=100), nullable=False),
    sa.Column('topic_name', sa.String(length=100), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('chapter_id', sa.String(length=120), nullable=False),
    sa.Column('chapter_name', sa.String(length=120), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('subject_id', sa.String(length=120), nullable=False),
    sa.Column('board_name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('content_id')
    )
    op.create_table('content_tracker',
    sa.Column('cont_track_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.String(length=120), nullable=True),
    sa.Column('topic_id', sa.String(length=100), nullable=False),
    sa.Column('is_completed', sa.Integer(), nullable=False),
    sa.Column('last_modified_Date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['question_details.subject_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['content.topic_id'], ),
    sa.PrimaryKeyConstraint('cont_track_id')
    )
    op.create_table('event_detail',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('event_name', sa.String(length=120), nullable=False),
    sa.Column('event_duration_hours', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('event_color', sa.DateTime(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('financial_details',
    sa.Column('fin_det_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('subscription_amt', sa.Integer(), nullable=False),
    sa.Column('maint_cost', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.PrimaryKeyConstraint('fin_det_id')
    )
    op.create_table('message_detail',
    sa.Column('msg_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.PrimaryKeyConstraint('msg_id')
    )
    op.create_table('performance_detail',
    sa.Column('perf_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.String(length=1), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('semi_annual', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('school_avg_score', sa.Integer(), nullable=False),
    sa.Column('class_avg_score', sa.Integer(), nullable=False),
    sa.Column('section_avg_score', sa.Integer(), nullable=False),
    sa.Column('student_score', sa.Integer(), nullable=False),
    sa.Column('school_year_rank', sa.Integer(), nullable=False),
    sa.Column('school_semi_annual_rank', sa.Integer(), nullable=False),
    sa.Column('school_month_rank', sa.Integer(), nullable=False),
    sa.Column('class_year_rank', sa.Integer(), nullable=False),
    sa.Column('section_year_rank', sa.Integer(), nullable=False),
    sa.Column('section_semi_annual_rank', sa.Integer(), nullable=False),
    sa.Column('student_year_rank', sa.Integer(), nullable=False),
    sa.Column('student_semi_annual_rank', sa.Integer(), nullable=False),
    sa.Column('student_month_rank', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['class_section.section_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_profile.student_id'], ),
    sa.PrimaryKeyConstraint('perf_id')
    )
    op.create_table('question_details',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.String(length=120), nullable=False),
    sa.Column('board_name', sa.String(length=120), nullable=False),
    sa.Column('question_description', sa.String(length=500), nullable=False),
    sa.Column('slideshow_id', sa.Integer(), nullable=False),
    sa.Column('question_type', sa.String(length=120), nullable=False),
    sa.Column('references', sa.String(length=120), nullable=True),
    sa.ForeignKeyConstraint(['board_name'], ['content.board_name'], ),
    sa.ForeignKeyConstraint(['class_id'], ['content.class_id'], ),
    sa.ForeignKeyConstraint(['slideshow_id'], ['slide_tracker.slideshow_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['content.subject_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('question_options',
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('option_desc', sa.String(length=500), nullable=False),
    sa.Column('option_type', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('is_correct', sa.Integer(), nullable=False),
    sa.Column('weightage', sa.Integer(), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['option_type'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question_details.question_id'], ),
    sa.PrimaryKeyConstraint('option_id')
    )
    op.create_table('recomm_detail',
    sa.Column('recomm_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.Integer(), nullable=False),
    sa.Column('if_this', sa.String(length=500), nullable=False),
    sa.Column('then_this', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['subject'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('recomm_id')
    )
    op.create_table('response_capture',
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('slideshow_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('response_option', sa.Integer(), nullable=False),
    sa.Column('is_correct', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question_details.question_id'], ),
    sa.ForeignKeyConstraint(['response_option'], ['question_options.option_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['slideshow_id'], ['slide_tracker.slideshow_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_profile.student_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('response_id')
    )
    op.create_table('result_upload',
    sa.Column('res_upload_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('exam_date', sa.DateTime(), nullable=True),
    sa.Column('is_present', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(length=120), nullable=True),
    sa.Column('test_type', sa.Integer(), nullable=False),
    sa.Column('marks_scored', sa.Integer(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['is_present'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_profile.student_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test_details.test_id'], ),
    sa.ForeignKeyConstraint(['test_type'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['version_number'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('res_upload_id')
    )
    op.create_table('school_fee_mgt',
    sa.Column('fee_trans_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('fee_amount', sa.Integer(), nullable=False),
    sa.Column('fee_paid_amount', sa.Integer(), nullable=False),
    sa.Column('is_paid', sa.Integer(), nullable=False),
    sa.Column('delay_reason', sa.Integer(), nullable=False),
    sa.Column('outstanding_amount', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['delay_reason'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['is_paid'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_profile.student_id'], ),
    sa.PrimaryKeyConstraint('fee_trans_id')
    )
    op.create_table('school_profile',
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('school_name', sa.String(length=500), nullable=False),
    sa.Column('registered_date', sa.DateTime(), nullable=False),
    sa.Column('org_leaving_Date', sa.DateTime(), nullable=True),
    sa.Column('org_leaving_reason', sa.String(length=500), nullable=True),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.Column('city', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['city'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['state'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('school_id')
    )
    op.create_table('search',
    sa.Column('search_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('search_keywords', sa.String(length=100), nullable=False),
    sa.Column('search_date', sa.DateTime(), nullable=False),
    sa.Column('is_error_page', sa.Integer(), nullable=False),
    sa.Column('redirect_url', sa.String(length=500), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.PrimaryKeyConstraint('search_id')
    )
    op.create_table('slide_tracker',
    sa.Column('slideshow_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.String(length=120), nullable=False),
    sa.Column('chapter_id', sa.String(length=120), nullable=False),
    sa.Column('topic_id', sa.String(length=100), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chapter_id'], ['content.chapter_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['book_details.subject_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['content.topic_id'], ),
    sa.PrimaryKeyConstraint('slideshow_id')
    )
    op.create_table('student_profile',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('student_name', sa.String(length=200), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('class_sec_id', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Integer(), nullable=False),
    sa.Column('dob', sa.DateTime(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('leaving_date', sa.DateTime(), nullable=True),
    sa.Column('leaving_reason', sa.String(length=500), nullable=True),
    sa.Column('roll_number', sa.Integer(), nullable=True),
    sa.Column('school_adm_number', sa.String(length=120), nullable=True),
    sa.Column('profile_picture', sa.String(length=500), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['gender'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.PrimaryKeyConstraint('student_id')
    )
    op.create_table('teacher_profile',
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('teacher_name', sa.String(length=500), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('designation', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('subject_name', sa.Integer(), nullable=True),
    sa.Column('class_sec_id', sa.Integer(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('school_leaving_date', sa.DateTime(), nullable=True),
    sa.Column('school_leaving_reason', sa.String(length=500), nullable=False),
    sa.Column('profile_picture', sa.String(length=500), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['designation'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['subject_name'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('teacher_id')
    )
    op.create_table('test_details',
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('board_name', sa.String(length=120), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('test_type', sa.String(length=120), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('city', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('total_marks', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.String(length=3), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['board_name'], ['content.board_name'], ),
    sa.ForeignKeyConstraint(['city'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['content.class_id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('test_id')
    )
    op.create_table('test_questions',
    sa.Column('tq_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question_details.question_id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test_details.test_id'], ),
    sa.PrimaryKeyConstraint('tq_id')
    )
    op.drop_table('support_meeting_details')
    op.drop_table('doctor_details')
    op.drop_table('stay_details')
    op.drop_table('donation_details')
    op.drop_table('message_details')
    op.drop_table('transaction_details')
    op.drop_table('member_details')
    op.drop_table('booking_details')
    op.drop_table('cost_details')
    op.drop_table('articles_details')
    op.drop_table('hospital_details')
    op.drop_table('author_details')
    op.drop_table('medicine_details')
    op.drop_table('counselling_details')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('counselling_details',
    sa.Column('cnsl_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cnsl_cnslr_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cnsl_sur_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cnsl_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cnsl_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('cnsl_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('cnsl_about', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('cnsl_review_cnslrr', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('cnsl_review_cnslee', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cnsl_sur_id'], ['survivor_details.sur_id'], name='counselling_details_cnsl_sur_id_fkey'),
    sa.PrimaryKeyConstraint('cnsl_id', name='counselling_details_pkey')
    )
    op.create_table('medicine_details',
    sa.Column('med_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('med_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('med_dosage', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('med_cost_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('med_in_stock', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('med_maker', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('med_cancer_type', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('med_id', name='medicine_details_pkey')
    )
    op.create_table('author_details',
    sa.Column('auth_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('auth_type', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('auth_art_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('art_indiv_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('auth_id', name='author_details_pkey')
    )
    op.create_table('hospital_details',
    sa.Column('hosp_id', sa.INTEGER(), server_default=sa.text("nextval('hospital_details_hosp_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('hosp_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('hosp_location', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('hosp_phone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('hosp_city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('hosp_id', name='hospital_details_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('articles_details',
    sa.Column('art_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('art_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('art_content', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('art_read_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('art_author', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('art_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('art_id', name='articles_details_pkey')
    )
    op.create_table('cost_details',
    sa.Column('cost_id', sa.INTEGER(), server_default=sa.text("nextval('cost_details_cost_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('cost_item', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('cost_unit_price', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cost_center', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('cost_id', name='cost_details_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('booking_details',
    sa.Column('book_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_stay_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('book_day_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('book_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('book_total_cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_refund_cost', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('book_sur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_stay_id'], ['stay_details.stay_id'], name='booking_details_book_stay_id_fkey'),
    sa.ForeignKeyConstraint(['book_sur_id'], ['survivor_details.sur_id'], name='booking_details_book_sur_id_fkey'),
    sa.PrimaryKeyConstraint('book_id', name='booking_details_pkey')
    )
    op.create_table('member_details',
    sa.Column('mem_id', sa.INTEGER(), server_default=sa.text("nextval('member_details_mem_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('mem_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('mem_location', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('mem_dept', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('mem_age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mem_type', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('mem_join_dt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('mem_end_dt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('mem_gender', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('mem_hour_day', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mem_city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('mem_branch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('mem_id', name='member_details_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('transaction_details',
    sa.Column('trn_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('trn_type', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('trn_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('trn_amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('trn_balance', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trn_desc', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('trn_by', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('trn_id', name='transaction_details_pkey')
    )
    op.create_table('message_details',
    sa.Column('msg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('msg_type', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('msg_description', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('msg_id', name='message_details_pkey')
    )
    op.create_table('donation_details',
    sa.Column('don_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('don_amount', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('don_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('don_by', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('don_city', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('don_sur_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('don_doc_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['don_doc_id'], ['doctor_details.doc_id'], name='donation_details_don_doc_id_fkey'),
    sa.ForeignKeyConstraint(['don_sur_id'], ['survivor_details.sur_id'], name='donation_details_don_sur_id_fkey'),
    sa.PrimaryKeyConstraint('don_id', name='donation_details_pkey')
    )
    op.create_table('stay_details',
    sa.Column('stay_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('stay_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('stay_location', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('stay_city', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('stay_total_room_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stay_avlbl_room_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stay_bed_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stay_cost_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['stay_cost_id'], ['cost_details.cost_id'], name='stay_details_stay_cost_id_fkey'),
    sa.PrimaryKeyConstraint('stay_id', name='stay_details_pkey')
    )
    op.create_table('doctor_details',
    sa.Column('doc_id', sa.INTEGER(), server_default=sa.text("nextval('doctor_details_doc_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('doc_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('doc_hosp_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doc_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doc_city', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('doc_phone', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doc_cnsl_prvdr', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doc_hosp_id'], ['hospital_details.hosp_id'], name='doctor_details_doc_hosp_id_fkey'),
    sa.PrimaryKeyConstraint('doc_id', name='doctor_details_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('support_meeting_details',
    sa.Column('meet_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meet_name', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('meet_city', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meet_address', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('meet_start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('meet_end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('meet_cost_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('meet_start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('meet_end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('meet_food', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('meet_doc_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('meet_coord_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['meet_coord_id'], ['member_details.mem_id'], name='support_meeting_details_meet_coord_id_fkey'),
    sa.ForeignKeyConstraint(['meet_cost_id'], ['cost_details.cost_id'], name='support_meeting_details_meet_cost_id_fkey'),
    sa.ForeignKeyConstraint(['meet_doc_id'], ['doctor_details.doc_id'], name='support_meeting_details_meet_doc_id_fkey'),
    sa.PrimaryKeyConstraint('meet_id', name='support_meeting_details_pkey')
    )
    op.drop_table('test_questions')
    op.drop_table('test_details')
    op.drop_table('teacher_profile')
    op.drop_table('student_profile')
    op.drop_table('slide_tracker')
    op.drop_table('search')
    op.drop_table('school_profile')
    op.drop_table('school_fee_mgt')
    op.drop_table('result_upload')
    op.drop_table('response_capture')
    op.drop_table('recomm_detail')
    op.drop_table('question_options')
    op.drop_table('question_details')
    op.drop_table('performance_detail')
    op.drop_table('message_detail')
    op.drop_table('financial_details')
    op.drop_table('event_detail')
    op.drop_table('content_tracker')
    op.drop_table('content')
    op.drop_table('class_section')
    op.drop_table('calendar')
    op.drop_table('book_details')
    op.drop_table('attendance')
    op.drop_table('alllearn_school_perf')
    # ### end Alembic commands ###
