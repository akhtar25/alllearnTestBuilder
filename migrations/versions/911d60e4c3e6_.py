"""empty message

Revision ID: 911d60e4c3e6
Revises: 
Create Date: 2019-07-04 16:41:42.960946

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '911d60e4c3e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address_detail',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('address_1', sa.String(length=100), nullable=True),
    sa.Column('address_2', sa.String(length=100), nullable=True),
    sa.Column('locality', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=30), nullable=True),
    sa.Column('state', sa.String(length=30), nullable=True),
    sa.Column('country', sa.String(length=20), nullable=True),
    sa.Column('pin', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.add_column('book_details', sa.Column('chapter_id', sa.String(length=200), nullable=True))
    op.add_column('performance_detail', sa.Column('class_sec_id', sa.Integer(), nullable=True))
    op.add_column('performance_detail', sa.Column('test_type', sa.Integer(), nullable=True))
    op.drop_constraint('performance_detail_section_id_fkey', 'performance_detail', type_='foreignkey')
    op.create_foreign_key(None, 'performance_detail', 'message_detail', ['test_type'], ['msg_id'])
    op.create_foreign_key(None, 'performance_detail', 'class_section', ['class_sec_id'], ['class_sec_id'])
    op.drop_column('performance_detail', 'section_id')
    op.add_column('school_profile', sa.Column('address_id', sa.Integer(), nullable=True))
    op.drop_constraint('school_profile_city_fkey', 'school_profile', type_='foreignkey')
    op.drop_constraint('school_profile_state_fkey', 'school_profile', type_='foreignkey')
    op.create_foreign_key(None, 'school_profile', 'address_detail', ['address_id'], ['address_id'])
    op.drop_column('school_profile', 'city')
    op.drop_column('school_profile', 'state')
    op.add_column('student_profile', sa.Column('address_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'student_profile', 'address_detail', ['address_id'], ['address_id'])
    op.drop_column('student_profile', 'address')
    op.add_column('teacher_profile', sa.Column('address_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'teacher_profile', 'address_detail', ['address_id'], ['address_id'])
    op.add_column('test_details', sa.Column('class_val', sa.Integer(), nullable=True))
    op.add_column('test_details', sa.Column('date_of_creation', sa.DateTime(), nullable=True))
    op.add_column('test_details', sa.Column('date_of_test', sa.DateTime(), nullable=True))
    op.add_column('test_details', sa.Column('school_id', sa.Integer(), nullable=True))
    op.add_column('test_details', sa.Column('teacher_id', sa.Integer(), nullable=True))
    op.add_column('test_details', sa.Column('test_paper_link', sa.String(length=200), nullable=True))
    op.drop_constraint('test_details_state_id_fkey', 'test_details', type_='foreignkey')
    op.drop_constraint('test_details_city_fkey', 'test_details', type_='foreignkey')
    op.drop_constraint('test_details_class_id_fkey', 'test_details', type_='foreignkey')
    op.create_foreign_key(None, 'test_details', 'teacher_profile', ['teacher_id'], ['teacher_id'])
    op.create_foreign_key(None, 'test_details', 'message_detail', ['class_val'], ['msg_id'])
    op.create_foreign_key(None, 'test_details', 'school_profile', ['school_id'], ['school_id'])
    op.drop_column('test_details', 'class_id')
    op.drop_column('test_details', 'city')
    op.drop_column('test_details', 'state_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('test_details', sa.Column('state_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('test_details', sa.Column('city', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('test_details', sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'test_details', type_='foreignkey')
    op.drop_constraint(None, 'test_details', type_='foreignkey')
    op.drop_constraint(None, 'test_details', type_='foreignkey')
    op.create_foreign_key('test_details_class_id_fkey', 'test_details', 'message_detail', ['class_id'], ['msg_id'])
    op.create_foreign_key('test_details_city_fkey', 'test_details', 'message_detail', ['city'], ['msg_id'])
    op.create_foreign_key('test_details_state_id_fkey', 'test_details', 'message_detail', ['state_id'], ['msg_id'])
    op.drop_column('test_details', 'test_paper_link')
    op.drop_column('test_details', 'teacher_id')
    op.drop_column('test_details', 'school_id')
    op.drop_column('test_details', 'date_of_test')
    op.drop_column('test_details', 'date_of_creation')
    op.drop_column('test_details', 'class_val')
    op.drop_constraint(None, 'teacher_profile', type_='foreignkey')
    op.drop_column('teacher_profile', 'address_id')
    op.add_column('student_profile', sa.Column('address', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'student_profile', type_='foreignkey')
    op.drop_column('student_profile', 'address_id')
    op.add_column('school_profile', sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('school_profile', sa.Column('city', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'school_profile', type_='foreignkey')
    op.create_foreign_key('school_profile_state_fkey', 'school_profile', 'message_detail', ['state'], ['msg_id'])
    op.create_foreign_key('school_profile_city_fkey', 'school_profile', 'message_detail', ['city'], ['msg_id'])
    op.drop_column('school_profile', 'address_id')
    op.add_column('performance_detail', sa.Column('section_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'performance_detail', type_='foreignkey')
    op.drop_constraint(None, 'performance_detail', type_='foreignkey')
    op.create_foreign_key('performance_detail_section_id_fkey', 'performance_detail', 'message_detail', ['section_id'], ['msg_id'])
    op.drop_column('performance_detail', 'test_type')
    op.drop_column('performance_detail', 'class_sec_id')
    op.drop_column('book_details', 'chapter_id')
    op.drop_table('address_detail')
    # ### end Alembic commands ###
