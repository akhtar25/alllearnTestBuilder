"""empty message

Revision ID: 941b6d832c52
Revises: 
Create Date: 2020-07-03 07:40:12.620026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '941b6d832c52'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedule_detail',
    sa.Column('slot_id', sa.Integer(), nullable=False),
    sa.Column('slot_no', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('class_sec_id', sa.Integer(), nullable=True),
    sa.Column('days_name', sa.String(length=20), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_sec_id'], ['class_section.class_sec_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('slot_id')
    )
    op.alter_column('live_class', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('live_class', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('student_profile', 'is_archived')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('student_profile', sa.Column('is_archived', sa.VARCHAR(length=1), autoincrement=False, nullable=True))
    op.alter_column('live_class', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('live_class', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_table('schedule_detail')
    # ### end Alembic commands ###
