"""empty message

Revision ID: 9b7f440b2255
Revises: ae9c93c7b822
Create Date: 2020-04-10 22:06:12.142409

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9b7f440b2255'
down_revision = 'ae9c93c7b822'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('board_detail',
    sa.Column('board_det_id', sa.Integer(), nullable=False),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('board_name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('country', sa.String(length=200), nullable=True),
    sa.Column('board_type', sa.Integer(), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['board_type'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('board_det_id')
    )
    op.create_table('chapter_detail',
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('chapter_num', sa.Integer(), nullable=True),
    sa.Column('chapter_name', sa.String(length=120), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.Column('board_det_id', sa.Integer(), nullable=True),
    sa.Column('bcs_id', sa.Integer(), nullable=True),
    sa.Column('book_name', sa.String(length=200), nullable=True),
    sa.Column('last_modified_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bcs_id'], ['board_class_subject.bcs_id'], ),
    sa.ForeignKeyConstraint(['board_det_id'], ['board_detail.board_det_id'], ),
    sa.ForeignKeyConstraint(['board_id'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('chapter_id')
    )
    op.drop_table('board_class_subject_books')
    op.drop_table('class_section_bkp')
    op.create_foreign_key(None, 'board_class', 'board_detail', ['board_det_id'], ['board_det_id'])
    op.add_column('board_class_subject', sa.Column('is_archived', sa.String(length=1), nullable=True))
    op.alter_column('board_class_subject', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'board_class_subject', 'school_profile', ['school_id'], ['school_id'])
    op.drop_column('board_class_subject', 'is_archieve')
    op.create_foreign_key(None, 'book_details', 'board_detail', ['board_det_id'], ['board_det_id'])
    op.drop_column('topic_detail', 'bookmark')
    op.create_foreign_key(None, 'topic_tracker', 'chapter_detail', ['chapter_id'], ['chapter_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'topic_tracker', type_='foreignkey')
    op.add_column('topic_detail', sa.Column('bookmark', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'book_details', type_='foreignkey')
    op.add_column('board_class_subject', sa.Column('is_archieve', sa.CHAR(length=1), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'board_class_subject', type_='foreignkey')
    op.alter_column('board_class_subject', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('board_class_subject', 'is_archived')
    op.drop_constraint(None, 'board_class', type_='foreignkey')
    op.create_table('class_section_bkp',
    sa.Column('class_sec_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('class_val', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('section', sa.VARCHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('student_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('class_teacher', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_archieve', sa.CHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('last_modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_teacher'], ['teacher_profile.teacher_id'], name='class_section_class_teacher_fkey'),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], name='class_section_school_id_fkey'),
    sa.PrimaryKeyConstraint('class_sec_id', name='class_section_bkp_pkey')
    )
    op.create_table('board_class_subject_books',
    sa.Column('bcsb_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('school_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('class_val', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_archieve', sa.CHAR(length=1), autoincrement=False, nullable=True),
    sa.Column('last_modified_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book_details.book_id'], name='board_class_subject_books_book_id_fkey'),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], name='board_class_subject_books_school_id_fkey'),
    sa.ForeignKeyConstraint(['subject_id'], ['message_detail.msg_id'], name='board_class_subject_books_subject_id_fkey'),
    sa.PrimaryKeyConstraint('bcsb_id', name='board_class_subject_books_pkey')
    )
    op.drop_table('chapter_detail')
    op.drop_table('board_detail')
    # ### end Alembic commands ###
