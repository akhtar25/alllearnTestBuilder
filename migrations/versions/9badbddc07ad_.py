"""empty message

Revision ID: 9badbddc07ad
Revises: 
Create Date: 2020-08-26 17:13:08.044978

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9badbddc07ad'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_detail',
    sa.Column('bd_id', sa.Integer(), nullable=False),
    sa.Column('account_num', sa.String(length=30), nullable=True),
    sa.Column('ifsc', sa.String(length=20), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('account_name', sa.String(length=200), nullable=True),
    sa.Column('image_url', sa.String(length=200), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.String(length=50), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.PrimaryKeyConstraint('bd_id'),
    sa.UniqueConstraint('vendor_id')
    )
    op.create_table('batch_test',
    sa.Column('batch_test_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=True),
    sa.Column('resp_session_id', sa.String(length=50), nullable=False),
    sa.Column('is_current', sa.String(length=1), nullable=False),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['test_details.test_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic_detail.topic_id'], ),
    sa.PrimaryKeyConstraint('batch_test_id')
    )
    op.create_table('comments',
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=200), nullable=False),
    sa.Column('comment_type', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_type'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic_detail.topic_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('comment_id')
    )
    op.create_table('course_batch',
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('batch_start_date', sa.DateTime(), nullable=True),
    sa.Column('batch_end_date', sa.DateTime(), nullable=True),
    sa.Column('batch_start_time', sa.String(length=16), nullable=True),
    sa.Column('batch_end_time', sa.String(length=16), nullable=True),
    sa.Column('days_of_week', sa.String(length=50), nullable=True),
    sa.Column('student_limit', sa.Integer(), nullable=True),
    sa.Column('course_batch_fee', sa.Float(), nullable=True),
    sa.Column('students_enrolled', sa.Integer(), nullable=True),
    sa.Column('total_fee_received', sa.Float(), nullable=True),
    sa.Column('fee_type', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['fee_type'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('batch_id')
    )
    op.create_table('course_detail',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('image_url', sa.String(length=400), nullable=True),
    sa.Column('summary_url', sa.String(length=400), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('ideal_for', sa.String(length=100), nullable=True),
    sa.Column('course_status', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Integer(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('is_private', sa.String(length=1), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_status'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['difficulty_level'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('course_enrollment',
    sa.Column('ce_id', sa.Integer(), nullable=False),
    sa.Column('student_user_id', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['student_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('ce_id')
    )
    op.create_table('course_review',
    sa.Column('cr_id', sa.Integer(), nullable=False),
    sa.Column('star_rating', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(length=200), nullable=False),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('cr_id')
    )
    op.create_table('course_topics',
    sa.Column('ct_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('video_class_url', sa.String(length=300), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['test_id'], ['test_details.test_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic_detail.topic_id'], ),
    sa.PrimaryKeyConstraint('ct_id')
    )
    op.create_table('payment_transaction',
    sa.Column('tran_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.String(length=20), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=5), nullable=True),
    sa.Column('note', sa.String(length=100), nullable=True),
    sa.Column('payer_user_id', sa.Integer(), nullable=True),
    sa.Column('payer_name', sa.String(length=100), nullable=True),
    sa.Column('payer_phone', sa.String(length=12), nullable=True),
    sa.Column('payer_email', sa.String(length=50), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('trans_type', sa.Integer(), nullable=False),
    sa.Column('payment_for', sa.Integer(), nullable=False),
    sa.Column('request_sign_hash', sa.String(length=200), nullable=True),
    sa.Column('response_sign_hash', sa.String(length=200), nullable=True),
    sa.Column('response_sign_check', sa.String(length=10), nullable=True),
    sa.Column('tran_status', sa.Integer(), nullable=False),
    sa.Column('gateway_ref_id', sa.String(length=100), nullable=True),
    sa.Column('payment_mode', sa.String(length=50), nullable=True),
    sa.Column('tran_msg', sa.String(length=50), nullable=True),
    sa.Column('tran_time', sa.DateTime(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('anonymous_payer', sa.String(length=1), nullable=True),
    sa.Column('anonymous_amount', sa.String(length=1), nullable=True),
    sa.ForeignKeyConstraint(['payer_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['payment_for'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school_profile.school_id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profile.teacher_id'], ),
    sa.ForeignKeyConstraint(['tran_status'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['trans_type'], ['message_detail.msg_id'], ),
    sa.PrimaryKeyConstraint('tran_id'),
    sa.UniqueConstraint('order_id')
    )
    op.create_table('topic_notes',
    sa.Column('tn_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('notes_name', sa.String(length=100), nullable=True),
    sa.Column('notes_url', sa.String(length=200), nullable=True),
    sa.Column('notes_type', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.String(length=1), nullable=False),
    sa.Column('last_modified_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['notes_type'], ['message_detail.msg_id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic_detail.topic_id'], ),
    sa.PrimaryKeyConstraint('tn_id')
    )
    op.add_column('attendance', sa.Column('class_sec_id', sa.Integer(), nullable=True))
    op.add_column('attendance', sa.Column('student_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'attendance', 'student_profile', ['student_id'], ['student_id'])
    op.create_foreign_key(None, 'attendance', 'class_section', ['class_sec_id'], ['class_sec_id'])
    op.add_column('live_class', sa.Column('room_id', sa.String(length=300), nullable=True))
    op.add_column('school_profile', sa.Column('curr_vendor_id', sa.String(length=50), nullable=True))
    op.create_foreign_key(None, 'school_profile', 'bank_detail', ['curr_vendor_id'], ['vendor_id'])
    op.add_column('teacher_profile', sa.Column('courses_created', sa.Integer(), nullable=True))
    op.add_column('teacher_profile', sa.Column('hours_taught_online', sa.Integer(), nullable=True))
    op.add_column('teacher_profile', sa.Column('room_id', sa.String(length=300), nullable=True))
    op.add_column('teacher_profile', sa.Column('students_taught', sa.Integer(), nullable=True))
    op.add_column('test_questions', sa.Column('is_archived', sa.String(length=1), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('test_questions', 'is_archived')
    op.drop_column('teacher_profile', 'students_taught')
    op.drop_column('teacher_profile', 'room_id')
    op.drop_column('teacher_profile', 'hours_taught_online')
    op.drop_column('teacher_profile', 'courses_created')
    op.drop_constraint(None, 'school_profile', type_='foreignkey')
    op.drop_column('school_profile', 'curr_vendor_id')
    op.drop_column('live_class', 'room_id')
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.drop_constraint(None, 'attendance', type_='foreignkey')
    op.drop_column('attendance', 'student_id')
    op.drop_column('attendance', 'class_sec_id')
    op.drop_table('topic_notes')
    op.drop_table('payment_transaction')
    op.drop_table('course_topics')
    op.drop_table('course_review')
    op.drop_table('course_enrollment')
    op.drop_table('course_detail')
    op.drop_table('course_batch')
    op.drop_table('comments')
    op.drop_table('batch_test')
    op.drop_table('bank_detail')
    # ### end Alembic commands ###
